// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.1
// source: experiments/api/experiment/experiment.proto

package experiment

import (
	log "github.com/bazelbuild/reclient/api/log"
	stat "github.com/bazelbuild/reclient/api/stat"
	_ "github.com/bazelbuild/reclient/api/stats"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VMSettings_OS int32

const (
	VMSettings_LINUX   VMSettings_OS = 0
	VMSettings_WINDOWS VMSettings_OS = 1
)

// Enum value maps for VMSettings_OS.
var (
	VMSettings_OS_name = map[int32]string{
		0: "LINUX",
		1: "WINDOWS",
	}
	VMSettings_OS_value = map[string]int32{
		"LINUX":   0,
		"WINDOWS": 1,
	}
)

func (x VMSettings_OS) Enum() *VMSettings_OS {
	p := new(VMSettings_OS)
	*p = x
	return p
}

func (x VMSettings_OS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VMSettings_OS) Descriptor() protoreflect.EnumDescriptor {
	return file_experiments_api_experiment_experiment_proto_enumTypes[0].Descriptor()
}

func (VMSettings_OS) Type() protoreflect.EnumType {
	return &file_experiments_api_experiment_experiment_proto_enumTypes[0]
}

func (x VMSettings_OS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VMSettings_OS.Descriptor instead.
func (VMSettings_OS) EnumDescriptor() ([]byte, []int) {
	return file_experiments_api_experiment_experiment_proto_rawDescGZIP(), []int{3, 0}
}

type Experiment struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Name              string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BaseConfiguration *RunConfiguration      `protobuf:"bytes,2,opt,name=base_configuration,json=baseConfiguration,proto3" json:"base_configuration,omitempty"`
	RunConfigurations []*RunConfiguration    `protobuf:"bytes,3,rep,name=run_configurations,json=runConfigurations,proto3" json:"run_configurations,omitempty"`
	NumTrials         int32                  `protobuf:"varint,4,opt,name=num_trials,json=numTrials,proto3" json:"num_trials,omitempty"`
	Tags              map[string]string      `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Experiment) Reset() {
	*x = Experiment{}
	mi := &file_experiments_api_experiment_experiment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Experiment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Experiment) ProtoMessage() {}

func (x *Experiment) ProtoReflect() protoreflect.Message {
	mi := &file_experiments_api_experiment_experiment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Experiment.ProtoReflect.Descriptor instead.
func (*Experiment) Descriptor() ([]byte, []int) {
	return file_experiments_api_experiment_experiment_proto_rawDescGZIP(), []int{0}
}

func (x *Experiment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Experiment) GetBaseConfiguration() *RunConfiguration {
	if x != nil {
		return x.BaseConfiguration
	}
	return nil
}

func (x *Experiment) GetRunConfigurations() []*RunConfiguration {
	if x != nil {
		return x.RunConfigurations
	}
	return nil
}

func (x *Experiment) GetNumTrials() int32 {
	if x != nil {
		return x.NumTrials
	}
	return 0
}

func (x *Experiment) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type RunConfiguration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to MachineSettings:
	//
	//	*RunConfiguration_VmSettings
	//	*RunConfiguration_WsSettings
	MachineSettings     isRunConfiguration_MachineSettings `protobuf_oneof:"machine_settings"`
	ReclientBinPath     string                             `protobuf:"bytes,3,opt,name=reclient_bin_path,json=reclientBinPath,proto3" json:"reclient_bin_path,omitempty"`
	ReclientDestination string                             `protobuf:"bytes,4,opt,name=reclient_destination,json=reclientDestination,proto3" json:"reclient_destination,omitempty"`
	Inputs              []*Input                           `protobuf:"bytes,11,rep,name=inputs,proto3" json:"inputs,omitempty"`
	SetupCommands       []*Command                         `protobuf:"bytes,6,rep,name=setup_commands,json=setupCommands,proto3" json:"setup_commands,omitempty"`
	PreBuildCommands    []*Command                         `protobuf:"bytes,7,rep,name=pre_build_commands,json=preBuildCommands,proto3" json:"pre_build_commands,omitempty"`
	BuildCommand        *Command                           `protobuf:"bytes,8,opt,name=build_command,json=buildCommand,proto3" json:"build_command,omitempty"`
	PostBuildCommands   []*Command                         `protobuf:"bytes,12,rep,name=post_build_commands,json=postBuildCommands,proto3" json:"post_build_commands,omitempty"`
	Outputs             []string                           `protobuf:"bytes,9,rep,name=outputs,proto3" json:"outputs,omitempty"`
	TeardownCommands    []*Command                         `protobuf:"bytes,10,rep,name=teardown_commands,json=teardownCommands,proto3" json:"teardown_commands,omitempty"`
	NumMachines         uint32                             `protobuf:"varint,13,opt,name=num_machines,json=numMachines,proto3" json:"num_machines,omitempty"`
	Environment         []*Environment                     `protobuf:"bytes,15,rep,name=environment,proto3" json:"environment,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RunConfiguration) Reset() {
	*x = RunConfiguration{}
	mi := &file_experiments_api_experiment_experiment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunConfiguration) ProtoMessage() {}

func (x *RunConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_experiments_api_experiment_experiment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunConfiguration.ProtoReflect.Descriptor instead.
func (*RunConfiguration) Descriptor() ([]byte, []int) {
	return file_experiments_api_experiment_experiment_proto_rawDescGZIP(), []int{1}
}

func (x *RunConfiguration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RunConfiguration) GetMachineSettings() isRunConfiguration_MachineSettings {
	if x != nil {
		return x.MachineSettings
	}
	return nil
}

func (x *RunConfiguration) GetVmSettings() *VMSettings {
	if x != nil {
		if x, ok := x.MachineSettings.(*RunConfiguration_VmSettings); ok {
			return x.VmSettings
		}
	}
	return nil
}

func (x *RunConfiguration) GetWsSettings() *WSSettings {
	if x != nil {
		if x, ok := x.MachineSettings.(*RunConfiguration_WsSettings); ok {
			return x.WsSettings
		}
	}
	return nil
}

func (x *RunConfiguration) GetReclientBinPath() string {
	if x != nil {
		return x.ReclientBinPath
	}
	return ""
}

func (x *RunConfiguration) GetReclientDestination() string {
	if x != nil {
		return x.ReclientDestination
	}
	return ""
}

func (x *RunConfiguration) GetInputs() []*Input {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *RunConfiguration) GetSetupCommands() []*Command {
	if x != nil {
		return x.SetupCommands
	}
	return nil
}

func (x *RunConfiguration) GetPreBuildCommands() []*Command {
	if x != nil {
		return x.PreBuildCommands
	}
	return nil
}

func (x *RunConfiguration) GetBuildCommand() *Command {
	if x != nil {
		return x.BuildCommand
	}
	return nil
}

func (x *RunConfiguration) GetPostBuildCommands() []*Command {
	if x != nil {
		return x.PostBuildCommands
	}
	return nil
}

func (x *RunConfiguration) GetOutputs() []string {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *RunConfiguration) GetTeardownCommands() []*Command {
	if x != nil {
		return x.TeardownCommands
	}
	return nil
}

func (x *RunConfiguration) GetNumMachines() uint32 {
	if x != nil {
		return x.NumMachines
	}
	return 0
}

func (x *RunConfiguration) GetEnvironment() []*Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

type isRunConfiguration_MachineSettings interface {
	isRunConfiguration_MachineSettings()
}

type RunConfiguration_VmSettings struct {
	VmSettings *VMSettings `protobuf:"bytes,2,opt,name=vm_settings,json=vmSettings,proto3,oneof"`
}

type RunConfiguration_WsSettings struct {
	WsSettings *WSSettings `protobuf:"bytes,14,opt,name=ws_settings,json=wsSettings,proto3,oneof"`
}

func (*RunConfiguration_VmSettings) isRunConfiguration_MachineSettings() {}

func (*RunConfiguration_WsSettings) isRunConfiguration_MachineSettings() {}

type Input struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Source        string                 `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Destination   string                 `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	VmDirect      bool                   `protobuf:"varint,3,opt,name=vm_direct,json=vmDirect,proto3" json:"vm_direct,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Input) Reset() {
	*x = Input{}
	mi := &file_experiments_api_experiment_experiment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Input) ProtoMessage() {}

func (x *Input) ProtoReflect() protoreflect.Message {
	mi := &file_experiments_api_experiment_experiment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Input.ProtoReflect.Descriptor instead.
func (*Input) Descriptor() ([]byte, []int) {
	return file_experiments_api_experiment_experiment_proto_rawDescGZIP(), []int{2}
}

func (x *Input) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Input) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *Input) GetVmDirect() bool {
	if x != nil {
		return x.VmDirect
	}
	return false
}

type VMSettings struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Zone             string                 `protobuf:"bytes,1,opt,name=zone,proto3" json:"zone,omitempty"`
	MachineType      string                 `protobuf:"bytes,2,opt,name=machine_type,json=machineType,proto3" json:"machine_type,omitempty"`
	Image            string                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	ImageProject     string                 `protobuf:"bytes,4,opt,name=image_project,json=imageProject,proto3" json:"image_project,omitempty"`
	ImageOs          VMSettings_OS          `protobuf:"varint,8,opt,name=image_os,json=imageOs,proto3,enum=experiment.VMSettings_OS" json:"image_os,omitempty"`
	CreationFlags    []string               `protobuf:"bytes,5,rep,name=creation_flags,json=creationFlags,proto3" json:"creation_flags,omitempty"`
	SystemDiskSize   string                 `protobuf:"bytes,12,opt,name=system_disk_size,json=systemDiskSize,proto3" json:"system_disk_size,omitempty"`
	DiskImage        string                 `protobuf:"bytes,6,opt,name=disk_image,json=diskImage,proto3" json:"disk_image,omitempty"`
	DiskImageProject string                 `protobuf:"bytes,7,opt,name=disk_image_project,json=diskImageProject,proto3" json:"disk_image_project,omitempty"`
	DiskType         string                 `protobuf:"bytes,11,opt,name=disk_type,json=diskType,proto3" json:"disk_type,omitempty"`
	SshKeyPath       string                 `protobuf:"bytes,9,opt,name=ssh_key_path,json=sshKeyPath,proto3" json:"ssh_key_path,omitempty"`
	SshUser          string                 `protobuf:"bytes,10,opt,name=ssh_user,json=sshUser,proto3" json:"ssh_user,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *VMSettings) Reset() {
	*x = VMSettings{}
	mi := &file_experiments_api_experiment_experiment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMSettings) ProtoMessage() {}

func (x *VMSettings) ProtoReflect() protoreflect.Message {
	mi := &file_experiments_api_experiment_experiment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMSettings.ProtoReflect.Descriptor instead.
func (*VMSettings) Descriptor() ([]byte, []int) {
	return file_experiments_api_experiment_experiment_proto_rawDescGZIP(), []int{3}
}

func (x *VMSettings) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *VMSettings) GetMachineType() string {
	if x != nil {
		return x.MachineType
	}
	return ""
}

func (x *VMSettings) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *VMSettings) GetImageProject() string {
	if x != nil {
		return x.ImageProject
	}
	return ""
}

func (x *VMSettings) GetImageOs() VMSettings_OS {
	if x != nil {
		return x.ImageOs
	}
	return VMSettings_LINUX
}

func (x *VMSettings) GetCreationFlags() []string {
	if x != nil {
		return x.CreationFlags
	}
	return nil
}

func (x *VMSettings) GetSystemDiskSize() string {
	if x != nil {
		return x.SystemDiskSize
	}
	return ""
}

func (x *VMSettings) GetDiskImage() string {
	if x != nil {
		return x.DiskImage
	}
	return ""
}

func (x *VMSettings) GetDiskImageProject() string {
	if x != nil {
		return x.DiskImageProject
	}
	return ""
}

func (x *VMSettings) GetDiskType() string {
	if x != nil {
		return x.DiskType
	}
	return ""
}

func (x *VMSettings) GetSshKeyPath() string {
	if x != nil {
		return x.SshKeyPath
	}
	return ""
}

func (x *VMSettings) GetSshUser() string {
	if x != nil {
		return x.SshUser
	}
	return ""
}

type WSSettings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	SshUser       string                 `protobuf:"bytes,2,opt,name=ssh_user,json=sshUser,proto3" json:"ssh_user,omitempty"`
	SshKeyPath    string                 `protobuf:"bytes,3,opt,name=ssh_key_path,json=sshKeyPath,proto3" json:"ssh_key_path,omitempty"`
	UseSudo       bool                   `protobuf:"varint,4,opt,name=use_sudo,json=useSudo,proto3" json:"use_sudo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WSSettings) Reset() {
	*x = WSSettings{}
	mi := &file_experiments_api_experiment_experiment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WSSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WSSettings) ProtoMessage() {}

func (x *WSSettings) ProtoReflect() protoreflect.Message {
	mi := &file_experiments_api_experiment_experiment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WSSettings.ProtoReflect.Descriptor instead.
func (*WSSettings) Descriptor() ([]byte, []int) {
	return file_experiments_api_experiment_experiment_proto_rawDescGZIP(), []int{4}
}

func (x *WSSettings) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WSSettings) GetSshUser() string {
	if x != nil {
		return x.SshUser
	}
	return ""
}

func (x *WSSettings) GetSshKeyPath() string {
	if x != nil {
		return x.SshKeyPath
	}
	return ""
}

func (x *WSSettings) GetUseSudo() bool {
	if x != nil {
		return x.UseSudo
	}
	return false
}

type Command struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Args          []string               `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_experiments_api_experiment_experiment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_experiments_api_experiment_experiment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_experiments_api_experiment_experiment_proto_rawDescGZIP(), []int{5}
}

func (x *Command) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

type Results struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ConfigUrl     string                 `protobuf:"bytes,2,opt,name=config_url,json=configUrl,proto3" json:"config_url,omitempty"`
	ConfigResults []*ConfigurationResult `protobuf:"bytes,3,rep,name=config_results,json=configResults,proto3" json:"config_results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Results) Reset() {
	*x = Results{}
	mi := &file_experiments_api_experiment_experiment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Results) ProtoMessage() {}

func (x *Results) ProtoReflect() protoreflect.Message {
	mi := &file_experiments_api_experiment_experiment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Results.ProtoReflect.Descriptor instead.
func (*Results) Descriptor() ([]byte, []int) {
	return file_experiments_api_experiment_experiment_proto_rawDescGZIP(), []int{6}
}

func (x *Results) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Results) GetConfigUrl() string {
	if x != nil {
		return x.ConfigUrl
	}
	return ""
}

func (x *Results) GetConfigResults() []*ConfigurationResult {
	if x != nil {
		return x.ConfigResults
	}
	return nil
}

type ConfigurationResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Durations     []int64                `protobuf:"varint,2,rep,packed,name=durations,proto3" json:"durations,omitempty"`
	Stats         []*Stats               `protobuf:"bytes,3,rep,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigurationResult) Reset() {
	*x = ConfigurationResult{}
	mi := &file_experiments_api_experiment_experiment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigurationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationResult) ProtoMessage() {}

func (x *ConfigurationResult) ProtoReflect() protoreflect.Message {
	mi := &file_experiments_api_experiment_experiment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationResult.ProtoReflect.Descriptor instead.
func (*ConfigurationResult) Descriptor() ([]byte, []int) {
	return file_experiments_api_experiment_experiment_proto_rawDescGZIP(), []int{7}
}

func (x *ConfigurationResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigurationResult) GetDurations() []int64 {
	if x != nil {
		return x.Durations
	}
	return nil
}

func (x *ConfigurationResult) GetStats() []*Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type Stats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NumRecords    int64                  `protobuf:"varint,1,opt,name=num_records,json=numRecords,proto3" json:"num_records,omitempty"`
	Stats         []*stat.Stat           `protobuf:"bytes,2,rep,name=stats,proto3" json:"stats,omitempty"`
	Environment   []*Environment         `protobuf:"bytes,3,rep,name=environment,proto3" json:"environment,omitempty"`
	Verification  *log.Verification      `protobuf:"bytes,4,opt,name=verification,proto3" json:"verification,omitempty"`
	ToolVersion   string                 `protobuf:"bytes,5,opt,name=tool_version,json=toolVersion,proto3" json:"tool_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Stats) Reset() {
	*x = Stats{}
	mi := &file_experiments_api_experiment_experiment_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_experiments_api_experiment_experiment_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_experiments_api_experiment_experiment_proto_rawDescGZIP(), []int{8}
}

func (x *Stats) GetNumRecords() int64 {
	if x != nil {
		return x.NumRecords
	}
	return 0
}

func (x *Stats) GetStats() []*stat.Stat {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *Stats) GetEnvironment() []*Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *Stats) GetVerification() *log.Verification {
	if x != nil {
		return x.Verification
	}
	return nil
}

func (x *Stats) GetToolVersion() string {
	if x != nil {
		return x.ToolVersion
	}
	return ""
}

type Environment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Environment) Reset() {
	*x = Environment{}
	mi := &file_experiments_api_experiment_experiment_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Environment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Environment) ProtoMessage() {}

func (x *Environment) ProtoReflect() protoreflect.Message {
	mi := &file_experiments_api_experiment_experiment_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Environment.ProtoReflect.Descriptor instead.
func (*Environment) Descriptor() ([]byte, []int) {
	return file_experiments_api_experiment_experiment_proto_rawDescGZIP(), []int{9}
}

func (x *Environment) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Environment) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_experiments_api_experiment_experiment_proto protoreflect.FileDescriptor

var file_experiments_api_experiment_experiment_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x65,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x11, 0x61, 0x70, 0x69, 0x2f, 0x6c,
	0x6f, 0x67, 0x2f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x61, 0x70,
	0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc8, 0x02, 0x0a, 0x0a, 0x45, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x12, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x75, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x12, 0x72, 0x75, 0x6e, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x52, 0x75, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x11, 0x72, 0x75, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x74, 0x72, 0x69,
	0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x54, 0x72,
	0x69, 0x61, 0x6c, 0x73, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61,
	0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xf8, 0x05, 0x0a, 0x10, 0x52, 0x75, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0b,
	0x76, 0x6d, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x56,
	0x4d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x76, 0x6d, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x39, 0x0a, 0x0b, 0x77, 0x73, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x57, 0x53, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x77, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x62,
	0x69, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x65, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x31,
	0x0a, 0x14, 0x72, 0x65, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x29, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x0e,
	0x73, 0x65, 0x74, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x0d, 0x73, 0x65, 0x74, 0x75, 0x70,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x41, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x5f,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x10, 0x70, 0x72, 0x65, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x38, 0x0a, 0x0d, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x43, 0x0a, 0x13, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x11, 0x70, 0x6f, 0x73, 0x74, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x73, 0x12, 0x40, 0x0a, 0x11, 0x74, 0x65, 0x61, 0x72, 0x64, 0x6f, 0x77, 0x6e,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x10, 0x74, 0x65, 0x61, 0x72, 0x64, 0x6f, 0x77, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x5f, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x75,
	0x6d, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0b, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x22, 0x5e,
	0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x6d, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x22, 0xca,
	0x03, 0x0a, 0x0a, 0x56, 0x4d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x34, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x56,
	0x4d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4f, 0x53, 0x52, 0x07, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x4f, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x28, 0x0a, 0x10,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x69,
	0x73, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x73, 0x6b,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x64, 0x69, 0x73, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x0c, 0x73, 0x73, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x73, 0x68, 0x4b, 0x65, 0x79, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x73, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x22, 0x1c, 0x0a,
	0x02, 0x4f, 0x53, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x49, 0x4e, 0x55, 0x58, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x53, 0x10, 0x01, 0x22, 0x7e, 0x0a, 0x0a, 0x57,
	0x53, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x73, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x12, 0x20,
	0x0a, 0x0c, 0x73, 0x73, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x73, 0x68, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x75, 0x64, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x75, 0x73, 0x65, 0x53, 0x75, 0x64, 0x6f, 0x22, 0x1d, 0x0a, 0x07, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x07, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x46, 0x0a, 0x0e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x22, 0x70, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x09, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x22, 0xe0, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x21,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x39, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x0c,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x6f, 0x6c, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_experiments_api_experiment_experiment_proto_rawDescOnce sync.Once
	file_experiments_api_experiment_experiment_proto_rawDescData = file_experiments_api_experiment_experiment_proto_rawDesc
)

func file_experiments_api_experiment_experiment_proto_rawDescGZIP() []byte {
	file_experiments_api_experiment_experiment_proto_rawDescOnce.Do(func() {
		file_experiments_api_experiment_experiment_proto_rawDescData = protoimpl.X.CompressGZIP(file_experiments_api_experiment_experiment_proto_rawDescData)
	})
	return file_experiments_api_experiment_experiment_proto_rawDescData
}

var file_experiments_api_experiment_experiment_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_experiments_api_experiment_experiment_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_experiments_api_experiment_experiment_proto_goTypes = []any{
	(VMSettings_OS)(0),          // 0: experiment.VMSettings.OS
	(*Experiment)(nil),          // 1: experiment.Experiment
	(*RunConfiguration)(nil),    // 2: experiment.RunConfiguration
	(*Input)(nil),               // 3: experiment.Input
	(*VMSettings)(nil),          // 4: experiment.VMSettings
	(*WSSettings)(nil),          // 5: experiment.WSSettings
	(*Command)(nil),             // 6: experiment.Command
	(*Results)(nil),             // 7: experiment.Results
	(*ConfigurationResult)(nil), // 8: experiment.ConfigurationResult
	(*Stats)(nil),               // 9: experiment.Stats
	(*Environment)(nil),         // 10: experiment.Environment
	nil,                         // 11: experiment.Experiment.TagsEntry
	(*stat.Stat)(nil),           // 12: stats.Stat
	(*log.Verification)(nil),    // 13: log.Verification
}
var file_experiments_api_experiment_experiment_proto_depIdxs = []int32{
	2,  // 0: experiment.Experiment.base_configuration:type_name -> experiment.RunConfiguration
	2,  // 1: experiment.Experiment.run_configurations:type_name -> experiment.RunConfiguration
	11, // 2: experiment.Experiment.tags:type_name -> experiment.Experiment.TagsEntry
	4,  // 3: experiment.RunConfiguration.vm_settings:type_name -> experiment.VMSettings
	5,  // 4: experiment.RunConfiguration.ws_settings:type_name -> experiment.WSSettings
	3,  // 5: experiment.RunConfiguration.inputs:type_name -> experiment.Input
	6,  // 6: experiment.RunConfiguration.setup_commands:type_name -> experiment.Command
	6,  // 7: experiment.RunConfiguration.pre_build_commands:type_name -> experiment.Command
	6,  // 8: experiment.RunConfiguration.build_command:type_name -> experiment.Command
	6,  // 9: experiment.RunConfiguration.post_build_commands:type_name -> experiment.Command
	6,  // 10: experiment.RunConfiguration.teardown_commands:type_name -> experiment.Command
	10, // 11: experiment.RunConfiguration.environment:type_name -> experiment.Environment
	0,  // 12: experiment.VMSettings.image_os:type_name -> experiment.VMSettings.OS
	8,  // 13: experiment.Results.config_results:type_name -> experiment.ConfigurationResult
	9,  // 14: experiment.ConfigurationResult.stats:type_name -> experiment.Stats
	12, // 15: experiment.Stats.stats:type_name -> stats.Stat
	10, // 16: experiment.Stats.environment:type_name -> experiment.Environment
	13, // 17: experiment.Stats.verification:type_name -> log.Verification
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_experiments_api_experiment_experiment_proto_init() }
func file_experiments_api_experiment_experiment_proto_init() {
	if File_experiments_api_experiment_experiment_proto != nil {
		return
	}
	file_experiments_api_experiment_experiment_proto_msgTypes[1].OneofWrappers = []any{
		(*RunConfiguration_VmSettings)(nil),
		(*RunConfiguration_WsSettings)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_experiments_api_experiment_experiment_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_experiments_api_experiment_experiment_proto_goTypes,
		DependencyIndexes: file_experiments_api_experiment_experiment_proto_depIdxs,
		EnumInfos:         file_experiments_api_experiment_experiment_proto_enumTypes,
		MessageInfos:      file_experiments_api_experiment_experiment_proto_msgTypes,
	}.Build()
	File_experiments_api_experiment_experiment_proto = out.File
	file_experiments_api_experiment_experiment_proto_rawDesc = nil
	file_experiments_api_experiment_experiment_proto_goTypes = nil
	file_experiments_api_experiment_experiment_proto_depIdxs = nil
}
